% EXAMPLE_CON_WU
% Script example pipeline Distance CON WU

clear variables %#ok<*NASGU>
%% Load BrainAtlas
im_ba = ImporterBrainAtlasXLS( ...
    'FILE', [which('aal94_atlas.xlsx')], ...
    'WAITBAR', true ...
    );

ba = im_ba.get('BA');

%% load Nifty images

group_dir = fullfile(fileparts(which('braph2individualconnectome')),'pipelines','correlation_suvr connectivity','Example data Nifti');
if ~exist(group_dir)
    create_example_NIfTI([],group_dir)
end

group_dir = fullfile(group_dir,'Group1');
im_gr1_WM_GM = ImporterGroupSubjNIfTI( ...
    'DIRECTORY', group_dir, ...
    'NIFTI_TYPE', {'T1'}, ...
    'WAITBAR', true ...
    );
gr1_WM_GM = im_gr1_WM_GM.get('GR');

im_gr1_PET = ImporterGroupSubjNIfTI( ...
    'DIRECTORY', group_dir, ...
    'NIFTI_TYPE', {'PET'}, ...
    'WAITBAR', true ...
    );
gr1_PET = im_gr1_PET.get('GR');


%% PDF Construtor
path_dict = IndexedDictionary(...
    'IT_CLASS', 'FILE_PATH', ...
    'IT_LIST', {FILE_PATH('PATH', which('upsampled_AAL2.nii')),FILE_PATH('PATH', which('upsampled_TD.nii'))} ...
    );
% suvr_brain_label = readtable(which('AAL2_Atlas_Labels.csv'));
% suvr_brain_label = suvr_brain_label.Var4;
im_gr_pdf = PDFConstructor('GR_PET',gr1_PET, ...
    'GR_T1',gr1_WM_GM, ...
    'BA', ba,...
    'ATLAS_PATH_DICT' ,path_dict, ...
    'REF_REGION_LIST',{[9100,9110,9120,9130,9140,9150,9160,9170], 7}, ...
    'ATLAS_KIND', {'AAL2','TD'});
gr1 = im_gr_pdf.get('GR');

%% Load Groups of SubjectCON Correlation based
g_temp  = GraphWU('STANDARDIZE_RULE', 'range');
a_WU1 = AnalyzeEnsemble_FUN_WU( ...
    'GR', gr1, ...
    'REPETITION', 0, ...
    'GRAPH_TEMPLATE', g_temp...
    );
gr1_corr = a_WU1.get('G_DICT');

%% add test on example data

num_subjects = a_WU1.get('G_DICT').get('LENGTH');
for i = 1:num_subjects
    g = a_WU1.get('G_DICT').get('IT', i);
    strength = g.get('MEASURE', 'Strength').get('M'); % Strength for all regions
    strength20_regions = strength{1}(1:20);
    strengthother_regions = strength{1}(21:end);
    mean_20 = mean(strength20_regions(:));
    mean_others = mean(strengthother_regions(:));
    % Assert for each subject
    assert(mean_20 > mean_others, ...
        sprintf('Test failed for subject %d: The first 20 regions do not have higher correlation than the other regions.', i));
end
