%% Pipeline Individual Structural DistanceCon Analysis WU

% This is the pipeline script to analyze a group of subjects using individual distance connectivity built on structural data.
% The structural data can be derived from imaging modalities like T1 weighted MRI (T1-W), static positron emission tomography (PET), or arterial spin labeling (ASL).
% 1. It loads a brain atlas from an XLS file (e.g., desikan_atlas.xlsx).
% 2. It loads the data of a group of subjects from an XLS file (e.g., ST_group1.xlsx).
% 3. It analyzes these data using a structural analysis (ST) based on a binary undirected graph using densities (BUD).

% PDF: /tutorials/pipelines/tut_a_st_wu/tut_a_st_wu.pdf
% README: /tutorials/pipelines/tut_a_st_wu/readme.md

%% Brain Atlas
ba = ImporterBrainAtlasXLS('WAITBAR', true).get('GET_FILE').get('BA'); % Load Brain Atlas from XLS % Brain Atlas

%% Group Nifti
gr_t1 = ImporterGroupSubjNifti('NIFTI_TYPE', {'T1'}, 'WAITBAR', true).get('GET_DIR').get('GR'); % Load Group T1 from Nifti % Group T1
gr_pet = ImporterGroupSubjNifti('NIFTI_TYPE', {'PET'}, 'WAITBAR', true).get('GET_DIR').get('GR'); % Load Group PET from Nifti % Group PET

%% Group SUVR
gr_suvr =  SUVRConstructor('GR_PET',gr_pet,'GR_T1',gr_t1,'BA', ba,'ATLAS_PATH_DICT' ,IndexedDictionary('IT_CLASS', 'FILE_PATH','IT_LIST', {FILE_PATH('PATH', '/home/hang/GitHub/IndividualConnectome-WithYuwei/group_data/test/atlas/upsampled_AAL2.nii'),FILE_PATH('PATH', '/home/hang/GitHub/IndividualConnectome-WithYuwei/group_data/test/atlas/upsampled_TD.nii')}), 'REF_REGION_LIST',{[9100,9110,9120,9130,9140,9150,9160,9170], 7},'ATLAS_KIND', {'AAL2','TD'},'SUVR_REGION_SELECTION',{'PreCG.L','PreCG.R','SFG.L','SFG.R','MFG.L','MFG.R','IFGoperc.L','IFGoperc.R','IFGtriang.L','IFGtriang.R','IFGorb.L','IFGorb.R','ROL.L','ROL.R','SMA.L','SMA.R','OLF.L','OLF.R','SFGmedial.L','SFGmedial.R','PFCventmed.L','PFCventmed.R','REC.L','REC.R','OFCmed.L','OFCmed.R','OFCant.L','OFCant.R','OFCpost.L','OFCpost.R','OFClat.L','OFClat.R','INS.L','INS.R','ACC.L','ACC.R','MCC.L','MCC.R','PCC.L','PCC.R','HIP.L','HIP.R','PHG.L','PHG.R','AMYG.L','AMYG.R','CAL.L','CAL.R','CUN.L','CUN.R','LING.L','LING.R','SOG.L','SOG.R','MOG.L','MOG.R','IOG.L','IOG.R','FFG.L','FFG.R','PoCG.L','PoCG.R','SPG.L','SPG.R','IPG.L','IPG.R','SMG.L','SMG.R','ANG.L','ANG.R','PCUN.L','PCUN.R','PCL.L','PCL.R','CAU.L','CAU.R','PUT.L','PUT.R','PAL.L','PAL.R','THA.L','THA.R','HES.L','HES.R','STG.L','STG.R','TPOsup.L','TPOsup.R','MTG.L','MTG.R','TPOmid.L','TPOmid.R','ITG.L','ITG.R'}).get('GR'); % Construct Group SUVR % Group SUVR

%% Analysis
a_WU = AnalyzeGroup_ST_WU('GR', gr_suvr); % Analyze Group % Group Analysis