%EXAMPLE_CON_WU
% Script example pipeline CON WU

clear variables %#ok<*NASGU>


%% Load BrainAtlas
im_ba = ImporterBrainAtlasXLS( ...
    'FILE', [which('aal94_atlas.xlsx')], ...
    'WAITBAR', true ...
    );

ba = im_ba.get('BA');



%% load Nifty images
create_example_NIfTI()

group_dir = fullfile(fileparts(which('IndividualDeviationConConstructor')),'Example data Nifti', 'Group1');
im_gr1_WM_GM = ImporterGroupSubjNIfTI( ...
    'DIRECTORY', group_dir, ...
    'NIFTI_TYPE', {'T1'}, ...
    'WAITBAR', true ...
    );
gr1_WM_GM = im_gr1_WM_GM.get('GR');

im_gr1_PET = ImporterGroupSubjNIfTI( ...
    'DIRECTORY', group_dir, ...
    'NIFTI_TYPE', {'PET'}, ...
    'WAITBAR', true ...
    );
gr1_PET = im_gr1_PET.get('GR');

healthy_dir = fullfile(fileparts(which('IndividualDeviationConConstructor')),'Example data Nifti', 'Group2');
im_gr_ref_WM_GM = ImporterGroupSubjNIfTI( ...
    'DIRECTORY', healthy_dir, ...
    'NIFTI_TYPE', {'T1'}, ...
    'WAITBAR', true ...
    );
gr_ref_WM_GM = im_gr_ref_WM_GM.get('GR');

im_gr_ref_PET = ImporterGroupSubjNIfTI( ...
    'DIRECTORY', healthy_dir, ...
    'NIFTI_TYPE', {'PET'}, ...
    'WAITBAR', true ...
    );
gr_ref_PET = im_gr_ref_PET.get('GR');
%% ROI constructor

path_dict = IndexedDictionary(...
    'IT_CLASS', 'FILE_PATH', ...
    'IT_LIST', {FILE_PATH('PATH',which('upsampled_AAL2.nii')),FILE_PATH('PATH', which('upsampled_TD.nii'))} ...
    );

% suvr_brain_label = readtable('group_data/test/atlas/AAL2_Atlas_Labels.csv');
% suvr_brain_label = suvr_brain_label.Var4;
gr = SUVRConstructor('GR_PET',gr1_PET, ...
    'GR_T1',gr1_WM_GM, ...
    'BA', ba,...
    'ATLAS_PATH_DICT' ,path_dict, ...
    'REF_REGION_LIST',{[9100,9110,9120,9130,9140,9150,9160,9170], 7}, ...
    'ATLAS_KIND', {'AAL2','TD'});
Con_gr = gr.get('GR');
%% healthy suvr
gr_healthy = SUVRConstructor('GR_PET',gr_ref_PET, ...
    'GR_T1',gr_ref_WM_GM, ...
    'BA', ba,...
    'ATLAS_PATH_DICT' ,path_dict, ...
    'REF_REGION_LIST',{[9100,9110,9120,9130,9140,9150,9160,9170], 7}, ...
    'ATLAS_KIND', {'AAL2','TD'});
Con_gr_healthy = gr_healthy.get('GR');


%% Load Groups of SubjectCON Deviation based
im_gr1 = IndividualDeviationConConstructor( ...
    'GR_SUVR', Con_gr,...
    'GR_SUVR_REF', Con_gr_healthy);

gr1 = im_gr1.get('GR');
%%
a_WU1 = AnalyzeEnsemble_CON_WU( ...
    'GR', gr1 ...
    );


